// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TheatricalPlayersRefactoringKata.Data;

#nullable disable

namespace TheatricalPlayersRefactoringKata.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240822235824_Insert_MockData")]
    partial class Insert_MockData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.20");

            modelBuilder.Entity("TheatricalPlayersRefactoringKata.Models.Play", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("Lines")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Name");

                    b.HasIndex("Type");

                    b.ToTable("Plays");

                    b.HasData(
                        new
                        {
                            Name = "Hamlet",
                            Lines = 4024,
                            Type = "tragedy"
                        },
                        new
                        {
                            Name = "As You Like It",
                            Lines = 2670,
                            Type = "comedy"
                        },
                        new
                        {
                            Name = "Othello",
                            Lines = 3560,
                            Type = "tragedy"
                        },
                        new
                        {
                            Name = "Henry V",
                            Lines = 3227,
                            Type = "history"
                        },
                        new
                        {
                            Name = "King John",
                            Lines = 2648,
                            Type = "history"
                        },
                        new
                        {
                            Name = "Richard III",
                            Lines = 3718,
                            Type = "history"
                        });
                });

            modelBuilder.Entity("TheatricalPlayersRefactoringKata.Models.PlayType", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DtInclusao")
                        .HasColumnType("TEXT");

                    b.HasKey("Name");

                    b.ToTable("PlayTypes");

                    b.HasData(
                        new
                        {
                            Name = "tragedy",
                            DtInclusao = new DateTime(2024, 8, 22, 20, 58, 24, 570, DateTimeKind.Local).AddTicks(3682)
                        },
                        new
                        {
                            Name = "comedy",
                            DtInclusao = new DateTime(2024, 8, 22, 20, 58, 24, 570, DateTimeKind.Local).AddTicks(3692)
                        },
                        new
                        {
                            Name = "history",
                            Description = "new genre",
                            DtInclusao = new DateTime(2024, 8, 22, 20, 58, 24, 570, DateTimeKind.Local).AddTicks(3693)
                        });
                });

            modelBuilder.Entity("TheatricalPlayersRefactoringKata.Models.StatementLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<int>("Audience")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Costumer")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Credits")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DtInclusao")
                        .HasColumnType("TEXT");

                    b.Property<string>("PlayId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PlayId");

                    b.HasIndex("DtInclusao", "PlayId", "Costumer")
                        .IsUnique();

                    b.ToTable("StatementLogs");
                });

            modelBuilder.Entity("TheatricalPlayersRefactoringKata.Models.Play", b =>
                {
                    b.HasOne("TheatricalPlayersRefactoringKata.Models.PlayType", null)
                        .WithMany()
                        .HasForeignKey("Type")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TheatricalPlayersRefactoringKata.Models.StatementLog", b =>
                {
                    b.HasOne("TheatricalPlayersRefactoringKata.Models.Play", null)
                        .WithMany()
                        .HasForeignKey("PlayId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
